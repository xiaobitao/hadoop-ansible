<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. See accompanying LICENSE file.
-->

<!-- Put site-specific property overrides in this file. -->

<configuration>
{% for item in core_site_properties%}
  <property>
    <name>{{ item.name }}</name>
    <value>{{ item.value }}</value>
  </property>
{% endfor %}

<property>
<name>hadoop.proxyuser.root.groups</name>
  <value>*</value>
  <description>
         The 'nfsserver' user is allowed to proxy all members of the 'users-group1' and
         'users-group2' groups. Note that in most cases you will need to include the
         group "root" because the user "root" (which usually belonges to "root" group) will
         generally be the user that initially executes the mount on the NFS client system.
         Set this to '*' to allow nfsserver user to proxy any group.
  </description>
</property>

<property>
  <name>hadoop.proxyuser.root.hosts</name>
  <value>*</value>
  <description>
         This is the host where the nfs gateway is running. Set this to '*' to allow
         requests from any hosts to be proxied.
  </description>
</property>

<property>
   <name>hadoop.http.filter.initializers</name>
   <value>org.apache.hadoop.http.lib.StaticUserWebFilter,org.apache.hadoop.security.HttpCrossOriginFilterInitializer</value>
   <description>A comma separated list of class names. Each class in the list
must extend org.apache.hadoop.http.FilterInitializer. The corresponding
Filter will be initialized. Then, the Filter will be applied to all user
facing jsp and servlet web pages.  The ordering of the list defines the
ordering of the filters.</description>
</property>

<!--
<property>
   <name>hadoop.tmp.dir</name>
   <value>/usr/local/hadoop/tmp</value>
   <description>Abase for other temporary directories.</description>
</property>
-->
<property>
   <name>fs.defaultFS</name>
   <value>hdfs://localhost:9000</value>
</property>

<property>
   <name>hadoop.http.cross-origin.enabled</name>
   <value>true</value>
   <description>Enables cross origin support for all web-services</description>
</property>

<property>
   <name>hadoop.http.cross-origin.allowed-origins</name>
   <value>*</value>
   <description>Comma separated list of origins that are allowed, wildcards (*) and patterns allowed</description>
</property>

<property>
   <name>hadoop.http.cross-origin.allowed-methods</name>
   <value>GET,POST,HEAD,FETCH, DELETE, OPTIONS</value>
   <description>Comma separated list of methods that are allowed</description>
</property>

<property>
   <name>hadoop.http.cross-origin.allowed-headers</name>
   <value>X-Requested-With,Content-Type,Accept,Origin</value>
   <description>Comma separated list of headers that are allowed</description>
</property>


<property>
   <name>hadoop.http.cross-origin.max-age</name>
   <value>1800</value>
   <description>Number of seconds a pre-flighted request can be cached</description>
</property>
</configuration>
